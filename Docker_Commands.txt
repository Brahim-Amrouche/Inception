docker ps -a \\ to list all containers
docker image ls \\ to list all images
docker stop <container name> \\ to stop the container from runing
docker rm <container name> \\ to remove the container
docker rmi <container name> \\ to remove image
docker run <image name> \\ to run container from image
docker run --rm <image_id> \\ to run containe and delete it on exit
DOCKER_BUILDKIT=0 docker build -t so-26220957 . \\ you can see the intermediary build states of a dockerfile image 
docker run -it --rm <image_name> \\to enter the image in interactive mode 
docker exec -it mariadb bash \\ to enter the container while it's running



docker build --no-cache -t <image_name>:<tag> \\ to build an image with no-cache
docker rm $(docker ps -a -q) \\ delete all containers
docker rmi $(docker images -a -q) \\ delete all images
docker volume rm $(docker volume ls -q) \\ delete all volumes


docker system prune -a -f \\ to remove every unsued docker ressource *images, volumes, containers, networks*

## this is made to Build the mariadb DockerFile
docker build --build-arg MARIADB_ROOT_PASSWORD=adm123 --build-arg MARIADB_USER=bamrouch --build-arg MARIADB_USER_PASSWORD=adm123 --build-arg SQL_DB_NAME=Inception -t mariadb:0 .

# this is to build the Wordpress Dockerfile
docker build --build-arg MARIADB_USER=bamrouch --build-arg MARIADB_USER_PASSWORD=adm123 --build-arg SQL_DB_NAME=Inception --build-arg WORDPRESS_ADMIN_USER=bamrouch_admin --build-arg WORDPRESS_ADMIN_PASSWORD=adm123 --build-arg WORDPRESS_URL=bamrouch.42.fr --build-arg WORDPRESS_WEBSITE_TITLE=Inception --build-arg WORDPRESS_ADMIN_EMAIL=amroucheb4@gmail.com  -t wordpress:0 .

#this is to build Nginx DockerFile
docker build --build-arg WORDPRESS_URL=bamrouch.42.fr --build-arg CERTIFICATE_PATH=/etc/ssl/private/inception.crt --build-arg CERTIFICATE_KEY_PATH=/etc/ssl/private/inception.key  -t nginx:0 .

## this is to run the mariadb container need to make the volume first
docker run --rm --name mariadb -v mariadb_vol:/var/lib/mysql --network inception mariadb:0


#this is to create a volume and mount it on my file system in this case for mariadb, that o=bind is related to the linux filesystem , exactly to the mount command.
#it allows you to share files accross with the vm , whatever happens in the binded folder happens in the vm, it's both for persisting data , and having access to it
docker volume create --driver local --opt type=none --opt device=/home/bamrouch/mariadb_volume --opt o=bind mariadb_volume

#to run wordpress and bind it to inception network and with external volume
docker run --rm --name wordpress -v wordpress_vol:/var/www/wordpress --network inception wordpress:0

#to run nginx container
docker run --rm --name nginx --network inception -p 443:443 nginx:0

#to create a bridge network for my containers
docker network create -d bridge <name>

